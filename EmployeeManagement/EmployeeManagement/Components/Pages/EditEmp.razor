@page "/edit"

<div id="edit">
    <h1>Edit Employee</h1>
    <div id="side-by-side">
        <div id="left-side">
            <form>
                <label>Search Employee</label><input class="form-control" type="text" id="code" name="code" @bind="inputEmployeeID">
                <label for="firstname">Edit First Name</label>
                <input type="text" name="firstname" @bind="editEmployee.FirstName" />
                <label for="lastname">Edit Last Name</label>
                <input type="text" name="lastname" @bind="editEmployee.LastName" />
                <label for="departments">Edit Department</label>
                <select name="departments" @bind="editEmployee.DeptName">
                    <option value="Accounting">Accounting</option>
                    <option value="HR">HR</option>
                    <option value="Legal">Legal</option>
                    <option value="Sales">Sales</option>
                    <option value="IT">IT</option>
                    <option value="Marketing">Marketing</option>
                </select>
                <label for="position">Edit Position</label>
                <select name="position" @bind="editEmployee.PositionTitle">
                    <option value="Accountant">Accountant</option>
                    <option value="Accounts Payable Clerk">Accounts Payable Clerk</option>
                    <option value="Accounts Receivable Clerk">Accounts Receivable Clerk</option>
                    <option value="HR Manager">HR Manager</option>
                    <option value="HR Assistant">HR Assistant</option>
                    <option value="Legal Counsel">Legal Counsel</option>
                    <option value="Legal Assistant">Legal Assistant</option>
                    <option value="Sales Manager">Sales Manager</option>
                    <option value="Sales Representative">Sales Representative</option>
                    <option value="IT Manager">IT Manager</option>
                    <option value="IT Specialist">IT Specialist</option>
                    <option value="Marketing Manager">Marketing Manager</option>
                    <option value="Marketing Coordinator">Marketing Coordinator</option>

                </select>
                <label for="salary">Edit Base Salary</label>
                <input type="number" name="salary" @bind="editEmployee.BaseSalary" />
                <div class="search-button-container" style="position: relative; top: 20px; left: 90px;">
                    <button type="button" class="search-button" @onclick="LoadEmployee">Search</button>
                </div>
            </form>
        </div>

        <div id="right-side">
            <h3>Current Employee Information:</h3>
            <div id="emp-info">
                <p>Name: @editEmployee.FirstName @editEmployee.LastName</p>
                <p>Department: @editEmployee.DeptName</p>
                <p>Position: @editEmployee.PositionTitle</p>
                <p>Salary: @editEmployee.BaseSalary</p>
            </div>
            <p>@errorMessage</p>
        </div>
    </div>

    <div id="buttons">
        <button type="submit" @onclick="SaveEmployee">Save Employee</button>
        <button type="submit" @onclick="DeleteEmployee">Delete Employee</button>
        <NavLink class="nav-link" href="/">
            <button>Cancel</button>
        </NavLink>
    </div>
</div>

<style>
    #edit {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 2rem;
    }

    #side-by-side {
        display: flex;
        gap: 5rem;
    }

    form {
        display: flex;
        flex-direction: column;
    }

    input {
        width: 20vw;
    }

    label {
        padding-top: 2rem;
    }
    #emp-info {
        border: 2px solid black;
        padding: 3rem;
    }

    #buttons {
        display: flex;
        flex-direction: row;
        justify-content: left;
        align-items: center;
        gap: 2rem;
        margin-top: 5rem;
    }

    button {
        height: fit-content;
        border-radius: 0.5rem;
        border: 1px solid black;
        padding-block: 1rem;
        padding-inline: 2rem;
        background-color: #D8829D;
    }

</style>

@if (!string.IsNullOrEmpty(message))
{
    <div class="alert alert-danger">@message</div>
}

@code {
    string inputEmployeeID = "";
    EditEmployee.Employee editEmployee = new EditEmployee.Employee();
    string errorMessage = "";
    private string message;

    private void LoadEmployee()
    {
        if (!string.IsNullOrEmpty(inputEmployeeID) && int.TryParse(inputEmployeeID, out int employeeID))
        {
            EditEmployee employeeService = new EditEmployee();
            editEmployee = employeeService.GetEmployeeByID(employeeID);
        }
    }

    private void SaveEmployee()
    {
        if (editEmployee != null)
        {
            EditEmployee employeeService = new EditEmployee();
            employeeService.UpdateEmployee(editEmployee);
            errorMessage = "Employee successfully saved!";
        } 
        else 
        {
            errorMessage = "Employee save unsuccessful.";
        }
    }

    private void DeleteEmployee()
    {
        if (!string.IsNullOrEmpty(inputEmployeeID) && int.TryParse(inputEmployeeID, out int employeeID))
        {
            EditEmployee employeeService = new EditEmployee();
            employeeService.DeleteEmployee(employeeID);
            editEmployee = new EditEmployee.Employee();
            inputEmployeeID = "";
            errorMessage = "Employee successfully deleted!";
        }
        else
        {
            errorMessage = "Employee deletion unsuccessful.";
        }
    }

}
