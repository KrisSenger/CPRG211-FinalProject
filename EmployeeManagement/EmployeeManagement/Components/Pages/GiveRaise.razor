@page "/raise"

<div id="raise">
    <h1>Give Employee Raise/Bonus</h1>
    <div id="side-by-side">
        <div id="left-side">
            <form>
                <label>Search Employee</label><input class="form-control" type="text" id="code" name="code" @bind="inputEmployeeID">
                <label for="salary">Edit Base Salary</label>
                <input type="number" name="salary" @bind="editEmployee.BaseSalary" />
                <label for="bonus">Edit Bonus</label>
                <input type="number" name="bonus" @bind="editEmployee.Bonus" />
                <div class="search-button-container" style="position: relative; top: 20px; left: 90px;">
                    <button type="button" class="search-button" @onclick="LoadEmployee">Search</button>
                </div>
            </form>
        </div>

        <div id="right-side">
            <h3>Current Employee Information:</h3>
            <div id="emp-info">
                <p>Name: @editEmployee.FirstName @editEmployee.LastName</p>
                <p>Department: @editEmployee.DeptName</p>
                <p>Position: @editEmployee.PositionTitle</p>
                <p>Salary: @editEmployee.BaseSalary</p>
            </div>
            <p>@errorMessage</p>
        </div>
    </div>

    <div id="buttons">
        <button type="submit">Save</button>
        <NavLink class="nav-link" href="/">
            <button>Cancel</button>
        </NavLink>
    </div>
</div>

<style>
    #raise {
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 2rem;
    }

    #side-by-side {
        display: flex;
        gap: 5rem;
    }

    form {
        display: flex;
        flex-direction: column;
    }

    input {
        width: 20vw;
    }

    label {
        padding-top: 2rem;
    }

    #emp-info {
        border: 2px solid black;
        padding: 3rem;
    }

    #buttons {
        display: flex;
        flex-direction: row;
        justify-content: center;
        align-items: center;
        gap: 2rem;
        margin-top: 5rem;
    }

    button {
        height: fit-content;
        border-radius: 0.5rem;
        border: 1px solid black;
        padding-block: 1rem;
        padding-inline: 2rem;
        background-color: #D8829D;
    }

</style>

@code {
    string inputEmployeeID = "";
    GiveRaiseBonus.Employee editEmployee = new GiveRaiseBonus.Employee();
    string errorMessage = "";

    private void LoadEmployee()
    {
        if (!string.IsNullOrEmpty(inputEmployeeID) && int.TryParse(inputEmployeeID, out int employeeID))
        {
            GiveRaiseBonus employeeService = new GiveRaiseBonus();
            editEmployee = employeeService.GetEmployeeByID(employeeID);
        }
    }

    private void SaveEmployee()
    {
        if (editEmployee != null)
        {
            GiveRaiseBonus employeeService = new GiveRaiseBonus();
            employeeService.NewSalaryBonus(editEmployee);
        }
    }
}